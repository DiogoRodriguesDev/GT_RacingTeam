@page "/"
@using ClassLibrary_GT_RT;
@using GT_RT_FrontEnd.Interfaces;
@using System.Diagnostics;
@inject IWebServiceAPI WebServiceAPI
@inject NavigationManager NavigationManager

<h2>Pilotos</h2>

@if (Pilotos is not null && Pilotos.Any())
{
    <table>
        <tbody>
            @foreach (var piloto in Pilotos)
            {
                <tr>
                    <td style="position: relative; padding: 20px;">
                        @if (piloto.Foto != null)
                        {
                            <img src="data:image;base64,@Convert.ToBase64String(piloto.Foto)" alt="Foto do Piloto" style="width: 100px; height: 100px; position: absolute; top: -10px; left: -10px; border-radius: 50%;" />
                        }
                        <div style="padding-left: 120px;">
                            <a href="@($"/piloto-details/{piloto.Id_piloto}")">@piloto.Nome</a><br />
                            @piloto.Nickname
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Piloto> Pilotos { get; set; } = new();
    bool dataFetched = false;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender || !dataFetched)
        {
            try
            {
                var response = await WebServiceAPI.GetPilotos();
                Pilotos = response.Where(p => !p.IsDeleted).ToList();
                dataFetched = true;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Debug.WriteLine(ex);
                throw;
            }
        }
    }

    private async Task Deletepiloto(int id)
    {
        try
        {
            await WebServiceAPI.DeletePiloto(id);
            Pilotos.RemoveAll(p => p.Id_piloto == id);
            dataFetched = false; // Adiciona esta linha para garantir que a lista seja atualizada após excluir um piloto.
        }
        catch (Exception ex)
        {
            Debug.WriteLine(ex);
            throw;
        }
    }
    private void Editpiloto(int id)
    {
        NavigationManager.NavigateTo($"/EditarPiloto/{id}");
    }
}