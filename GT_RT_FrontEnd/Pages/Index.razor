@page "/"
@using ClassLibrary_GT_RT;
@using Interfaces;
@using System.Diagnostics;
@inject IWebServiceAPI WebServiceAPI
@inject NavigationManager NavigationManager

<h2>Lista de Pilotos</h2>

@if (Pilotos is not null && Pilotos.Any())
{
    <table>
        <thead>
            <tr>
                <th>Nome</th>
                <th>Descrição</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var piloto in Pilotos)
            {
                <tr>
                    <td style="padding: 20px;"><a href="@($"/piloto-details/{piloto.Id_piloto}")">@piloto.Nome</a></td>
                    @*<td style="padding: 20px;">@piloto.Nome</td>*@
@*                    <td style="padding: 20px;">@piloto.Category</td>
                    <td style="padding: 20px;">@piloto.Price €</td>*@
                    <td style="padding: 20px;">@piloto.Descricao</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Piloto> Pilotos { get; set; } = new();
    bool dataFetched = false;

    protected override async Task OnInitializedAsync()
    {
        // Removida a chamada da API daqui
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender || !dataFetched)
        {
            try
            {
                var response = await WebServiceAPI.GetPilotos();
                Pilotos = response.Where(p => !p.IsDeleted).ToList();
                dataFetched = true;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Debug.WriteLine(ex);
                throw;
            }
        }
    }

    private async Task Deletepiloto(int id)
    {
        try
        {
            await WebServiceAPI.DeletePiloto(id);
            Pilotos.RemoveAll(p => p.Id_piloto == id);
            dataFetched = false; // Adiciona esta linha para garantir que a lista seja atualizada após excluir um piloto.
        }
        catch (Exception ex)
        {
            Debug.WriteLine(ex);
            throw;
        }
    }
    private void Editpiloto(int id)
    {
        NavigationManager.NavigateTo($"/EditarPiloto/{id}");
    }
}