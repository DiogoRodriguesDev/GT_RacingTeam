@page "/"
@using ClassLibrary_GT_RT;
@using GT_RT_FrontEnd.Interfaces;
@using System.Diagnostics;
@inject IWebServiceAPI WebServiceAPI
@inject NavigationManager NavigationManager



<div class="form-group row">
    <div class="col-sm-1">
        <h2>Pilotos</h2>
    </div>
    <div class="col-sm-1 ml-auto">
        <select id="filtroCompeticao" class="form-control bg-transparent text-white border-0" @bind="@filtroCategoriaId">
            <option class="bg-black" value="">Todos</option>
            @foreach (var categoria in Categorias)
            {
                <option class="bg-black" value="@categoria.Id_Piloto_Categorias">@categoria.Nome_Piloto_Categoria</option>
            }
        </select>
    </div>
    <div class="col-sm-1">
        <button class="btn btn-secondary" @onclick="FiltrarCategoria">Filtrar</button>
    </div>
</div>



@if (Pilotos is not null && Pilotos.Any())
{
    <div style="display: flex; flex-wrap: wrap;">
        @foreach (var piloto in PilotosFiltrados)
        {
            <div style="width: 200px; margin: 10px; text-align: center;">
                <div>
                    @if (piloto.Foto != null)
                    {
                        <img src="data:image;base64,@Convert.ToBase64String(piloto.Foto)" alt="Foto do Piloto" style="width: 100px; height: 100px; border-radius: 100%; margin-bottom: 10px;" onclick="@(() => RedirectToPilotoDetails(piloto.Id_piloto))" />
                    }
                    else
                    {
                        <img src="https://drive.google.com/uc?id=1MIW2KXPDHF2GlnJ1A4qUERXJMbb345-Z" alt="Imagem" style="width: 100px; height: 100px; border-radius: 100%; margin-bottom: 10px;" onclick="@(() => RedirectToPilotoDetails(piloto.Id_piloto))" />
                    }

                    <div>
                        <a href="@($"/piloto-details/{piloto.Id_piloto}")" class="link-personalizado">@piloto.Nome</a><br />
                        @piloto.Nickname
                    </div>
                </div>
            </div>
        }
    </div>
}



@code {


    List<Piloto> Pilotos { get; set; } = new();
    List<Piloto> PilotosFiltrados { get; set; } = new();
    bool dataFetched = false;

    private int filtroCategoriaId { get; set; } = new();
    private List<Piloto_Categorias> Categorias { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        //try
        //{
        //    var response = await WebServiceAPI.GetPilotos();
        //    Pilotos = response.Where(p => !p.IsDeleted && p.Inativo == false).ToList();

        //    Categorias = await WebServiceAPI.GetCategorias();

        //    dataFetched = true;
        //    FiltrarCategoria(); //para que inicialmente seja feito o load de todos os pilotos.
        //    StateHasChanged();
        //}
        //catch (Exception ex)
        //{
        //    Debug.WriteLine(ex);
        //    throw;
        //}
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender || !dataFetched)
        {
            try
            {
                var response = await WebServiceAPI.GetPilotos();
                Pilotos = response.Where(p => !p.IsDeleted && p.Inativo == false).ToList();

                Categorias = await WebServiceAPI.GetCategorias();

                dataFetched = true;
                FiltrarCategoria(); //para que inicialmente seja feito o load de todos os pilotos.
                StateHasChanged();

            }
            catch (Exception ex)
            {
                Debug.WriteLine(ex);
                throw;
            }
        }
    }

    private void RedirectToPilotoDetails(int pilotoId)
    {
        NavigationManager.NavigateTo($"/piloto-details/{pilotoId}");
    }

    public void FiltrarCategoria()
    {
        if (filtroCategoriaId == 0)
        {
            PilotosFiltrados = Pilotos;
        }
        else
        {
            PilotosFiltrados = Pilotos.Where(x => x.Id_Piloto_Categoria == filtroCategoriaId).ToList();
        }
        StateHasChanged(); 
    }

}