@page "/competicao-details/{id:int}"

@using ClassLibrary_GT_RT
@using GT_RT_FrontEnd.Interfaces
@using System.Diagnostics
@inject IWebServiceAPI WebServiceAPI

@if (Competicao != null)
{
    <h3>@Competicao.Nome</h3>
    @if (Competicao.Foto != null)
    {
        <img src="data:image;base64,@Convert.ToBase64String(Competicao.Foto)" alt="Foto da Competicao" style="max-width: 200px; max-height: 200px;" />
    }

    <p><strong>Descricao:</strong> @Competicao.Descricao</p>
    <p><strong>Categoria:</strong> @Competicao.Nome_Categoria</p>
}
else
{
    <p>A competicao não foi encontrada.</p>
}

@if (ResultadosCorrida != null && ResultadosCorrida.Any())
{
    <table>
        <thead>
            <tr>
                <th>ID do Piloto</th>
                <th>Nome do Piloto</th>
                <th>Total de Pontos</th>
          
            </tr>
        </thead>
        <tbody>
            @foreach (var resultado in ResultadosCorrida.GroupBy(r => r.Id_piloto)
                                                        .OrderByDescending(x => x.Sum(r => r.Pontos)))
            {
                <tr>
                    <td>@resultado.Key</td>
                    <td>@resultado.First().Nome_Piloto</td>
                    <td>@resultado.Sum(r => r.Pontos)</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Nenhum resultado de corrida encontrado para esta competicao.</p>
}


@if (Corridas != null && Corridas.Any())
{
    <table style="border-collapse: collapse; width: 100%;">
        <thead>
            <tr>
                <th style="border: 1px solid black;">Piloto</th>
                @foreach (var corrida in Corridas)
                {
                    <th style="border: 1px solid black;">@corrida.Circuito</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var resultado in ResultadosCorrida.GroupBy(r => r.Id_piloto).OrderByDescending(x => x.Sum(r => r.Pontos)))
            {
                <tr>
                    <td style="border: 1px solid black;">@resultado.First().Nome_Piloto</td>
                    @foreach (var corrida in Corridas)
                    {
                        <td style="border: 1px solid black;">
                            @{
                                var pontos = resultado.FirstOrDefault(r => r.Id_corrida == corrida.Id_corrida)?.Pontos;
                                @pontos
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Nenhuma corrida encontrada para esta competicao.</p>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private Competicao Competicao { get; set; }
    private List<ResultadoCorrida> ResultadosCorrida { get; set; }
    private List<Corrida> Corridas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Competicao = await WebServiceAPI.GetCompeticao(Id);
            var corridas = await WebServiceAPI.GetCorridas();
            corridas = corridas.Where(c => c.Id_competicao == Id && !c.IsDeleted).ToList();
            Corridas = corridas;

            ResultadosCorrida = new List<ResultadoCorrida>();

            foreach (var corrida in corridas)
            {
                var resultados = await WebServiceAPI.GetResultadoCorrida();
                resultados = resultados.Where(r => r.Id_corrida == corrida.Id_corrida && !r.IsDeleted).ToList();
                ResultadosCorrida.AddRange(resultados);
            }
        }
        catch (Exception ex)
        {
            Debug.WriteLine(ex);
            throw;
        }
    }
}