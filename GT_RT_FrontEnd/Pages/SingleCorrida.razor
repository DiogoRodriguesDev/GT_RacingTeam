@page "/Corrida-details/{id:int}"

@using ClassLibrary_GT_RT
@using GT_RT_FrontEnd.Interfaces
@using System.Diagnostics
@inject IWebServiceAPI WebServiceAPI
@inject NavigationManager NavigationManager

<h2>Detalhes do Corrida</h2>

@if (Corrida != null)
{
<h3>@Corrida.Circuito</h3>
<p><strong>ID da Corrida:</strong> @Corrida.Id_corrida</p>
<p><strong>Data:</strong> @Corrida.Data</p>
<p><strong>ID da Competição:</strong> @Corrida.Id_competicao</p>
<p><strong>Carros Permitidos:</strong> @Corrida.CarrosPermitidos</p>
<p><strong>Tipo de Pneus:</strong> @Corrida.Tipo_Pneus</p>
<p><strong>Número de Voltas:</strong> @Corrida.NumeroVoltas</p>
<p><strong>Número de Minutos:</strong> @Corrida.NumeroMinutos</p>
<p><strong>ID do Resultado:</strong> @Corrida.Id_Resultado</p>
<p><strong>Resultado:</strong> @Corrida.Resultado</p>


}
else
{
<p>A corrida não foi encontrada.</p>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private Corrida Corrida { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Corrida = await WebServiceAPI.GetCorrida(Id);
        }
        catch (Exception ex)
        {
            Debug.WriteLine(ex);
            throw;
        }
    }
}